"use strict";function _toConsumableArray(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}return Array.from(a)}var playing=!0,timer=function(){return setInterval(function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b+1},1e3)},interval=timer(),minus=document.getElementById("minus"),plus=document.getElementById("plus"),heart=document.getElementById("heart"),pause=document.getElementById("pause"),commentForm=document.getElementsByTagName("form")[0];minus.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b-1}),plus.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b+1}),heart.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText),c=document.querySelector(".likes"),d=void 0;if([].concat(_toConsumableArray(c.children)).map(function(a){return parseInt(a.dataset.num)}).includes(b)){d=document.querySelector('[data-num="'+b+'"]');var e=parseInt(d.children[0].innerText);d.innerHTML=b+" has been liked <span>"+(e+1)+"</span> times"}else(d=document.createElement("li")).setAttribute("data-num",b),d.innerHTML=b+" has been liked <span>1</span> time",c.appendChild(d)}),pause.addEventListener("click",function(){playing?(playing=!1,clearInterval(interval),this.innerText="resume"):(playing=!0,interval=timer(),this.innerText="pause"),[].concat(_toConsumableArray(document.getElementsByTagName("button"))).forEach(function(a){"pause"!==a.id&&(a.disabled=!playing)})}),commentForm.addEventListener("submit",function(a){a.preventDefault();var b=this.children[0],c=b.value;b.value="";var d=document.querySelector(".comments"),e=document.createElement("p");e.innerText=c,d.appendChild(e)});
<script src="js/index.min.js"></script>
<script src="js/challenge.js"></script>
// Initialize variables
let count = 0;
let isPaused = false;
let likes = {};

// Get DOM elements
const counterDisplay = document.getElementById('counter');
const minusButton = document.getElementById('minus');
const plusButton = document.getElementById('plus');
const heartButton = document.getElementById('heart');
const pauseButton = document.getElementById('pause');
const likesList = document.querySelector('.likes');
const commentForm = document.getElementById('comment-form');
const commentInput = document.getElementById('comment-input');
const commentsList = document.getElementById('list');

// Update counter display
function updateCounter() {
    counterDisplay.textContent = count;
}

// Handle plus button click
plusButton.addEventListener('click', () => {
    if (!isPaused) {
        count++;
        updateCounter();
    }
});

// Handle minus button click
minusButton.addEventListener('click', () => {
    if (!isPaused) {
        count--;
        updateCounter();
    }
});

// Handle heart button click
heartButton.addEventListener('click', () => {
    if (!likes[count]) {
        likes[count] = 0;
    }
    likes[count]++;
    updateLikes();
});

// Update likes display
function updateLikes() {
    likesList.innerHTML = '';
    for (let num in likes) {
        const li = document.createElement('li');
        li.textContent = `${num} has been liked ${likes[num]} time${likes[num] > 1 ? 's' : ''}`;
        likesList.appendChild(li);
    }
}

// Handle pause button click
pauseButton.addEventListener('click', () => {
    isPaused = !isPaused;
    pauseButton.textContent = isPaused ? 'resume' : 'pause';
});

// Handle comment form submission
commentForm.addEventListener('submit', (e) => {
    e.preventDefault();
    const commentText = commentInput.value.trim();
    if (commentText) {
        addComment(commentText);
        commentInput.value = '';
    }
});

// Add a new comment
function addComment(text) {
    const p = document.createElement('p');
    p.textContent = text;
    commentsList.appendChild(p);
}

// Initialize counter display
updateCounter();